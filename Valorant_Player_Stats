{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "CIS 3120 - Homework 2 Part 1.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNYZl7E1hiBdp2Q+/HlyhWP",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jordanho1006/python-projects/blob/main/Valorant_Player_Stats\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question #01 - Web Scraping"
      ],
      "metadata": {
        "id": "ZCn1Z8HJX9Pa"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lALeUslfJcDY"
      },
      "outputs": [],
      "source": [
        "#using the weather API to find the weather data for a single city\n",
        "#import the necessary libraries\n",
        "import requests\n",
        "import pandas as pd\n",
        "from bs4 import BeautifulSoup"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#making a request to the URL\n",
        "URL = \"https://www.vlr.gg/stats/?event_group_id=all&event_id=all&region=na&country=us&min_rounds=200&min_rating=1800&agent=all&map_id=all&timespan=60d\"\n",
        "page = requests.get(URL)\n",
        "\n",
        "#importing the raw html into beautiful soup\n",
        "soup = BeautifulSoup(page.content, 'html.parser')"
      ],
      "metadata": {
        "id": "5xbCW_oAIW8U"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#scraping and processing the raw player names\n",
        "player_names = soup.find_all('div', class_= 'text-of')\n",
        "names = []\n",
        "for player_name in player_names:\n",
        "  names.append(player_name.get_text().strip())\n",
        "\n",
        "#scraping and processing the raw number of rounds played\n",
        "rounds_played = soup.find_all('td', class_ = 'mod-rnd')\n",
        "rnd = []\n",
        "for round_played in rounds_played:\n",
        "  rnd.append(float(round_played.get_text().strip()))\n",
        "\n",
        "#scraping and processing the raw average combat score\n",
        "average_combat_scores = soup.find_all('td', class_ = 'mod-color-sq mod-acs')\n",
        "acs = []\n",
        "for average_combat_score in average_combat_scores:\n",
        "      acs.append(float(average_combat_score.get_text().strip()))\n",
        "\n",
        "#declarations for raw common player stats: K/D, ADR, HS%\n",
        "player_stats = []\n",
        "kd_ratios = []\n",
        "adr_ratios = []\n",
        "raw_headshot_perc = []\n",
        "\n",
        "#scraping and processing the raw common player data without any id and class attributes\n",
        "raw_stats = soup.find_all('td', class_ = 'mod-color-sq')\n",
        "for raw_stat in raw_stats:\n",
        "    player_stats.append(raw_stat.get_text().strip())\n",
        "\n",
        "kd = []\n",
        "kd_ratios = player_stats[1::10]\n",
        "for kd_ratio in kd_ratios:\n",
        "  kd.append(float(kd_ratio))\n",
        "  \n",
        "adr = []\n",
        "adr_ratios = player_stats[3::10]\n",
        "for adr_ratio in adr_ratios:\n",
        "  adr.append(float(adr_ratio))\n",
        "\n",
        "headshot_percentage = []\n",
        "headshots = player_stats[8::10]\n",
        "for headshot in headshots:\n",
        "  if headshot.find('%') != -1:\n",
        "    headshot_percentage.append(float(headshot.strip('%'))/100)"
      ],
      "metadata": {
        "id": "nkg6zde6Ndxa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#creating a dictionary and turning it into a dataframe\n",
        "valorant_stats = {'Player Name' : names,\n",
        "         'Rounds Played' : rnd,\n",
        "         'Average CS' : acs,\n",
        "         'K/D Ratio' : kd,\n",
        "         'Average DPR' : adr,\n",
        "         'Headshot %' : headshot_percentage}\n",
        "valorant = pd.DataFrame(valorant_stats)\n",
        "\n",
        "#creating a csv file\n",
        "valorant.to_csv('valorant_playerstats.csv',index=False)\n",
        "valorant"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "id": "patdJRJu_zXk",
        "outputId": "b214d70c-2b74-44c6-91f2-b78c77a1d1c5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Player Name  Rounds Played  Average CS  K/D Ratio  Average DPR  Headshot %\n",
              "0         leaf          485.0       270.4       1.27        170.1        0.24\n",
              "1    Cryocells          417.0       249.6       1.43        152.4        0.26\n",
              "2          yay          583.0       243.3       1.37        154.6        0.24\n",
              "3        trent          460.0       232.0       1.33        156.4        0.35\n",
              "4       Victor          583.0       229.1       1.11        147.9        0.21\n",
              "5          s0m          207.0       220.0       1.11        141.2        0.29\n",
              "6       zekken          417.0       219.8       1.06        144.6        0.21\n",
              "7       Xeppaa          485.0       213.0       1.00        140.2        0.22\n",
              "8        skuba          314.0       212.0       1.07        140.2        0.32\n",
              "9      Zellsis          333.0       210.1       1.04        133.9        0.17\n",
              "10        SicK          331.0       203.9       1.01        136.7        0.21\n",
              "11       mitch          485.0       202.6       1.04        130.9        0.17\n",
              "12       valyn          460.0       200.0       1.09        128.4        0.23\n",
              "13    crashies          583.0       197.5       1.05        131.6        0.26\n",
              "14     ShahZaM          331.0       194.8       0.99        135.8        0.22\n",
              "15        bdog          305.0       192.1       0.95        127.1        0.22\n",
              "16         tex          207.0       191.8       0.74        124.6        0.27\n",
              "17        TiGG          305.0       190.8       0.86        124.6        0.24\n",
              "18         neT          460.0       189.1       0.97        123.5        0.30\n",
              "19      dazzLe          305.0       183.3       0.79        124.0        0.20\n",
              "20        dapr          331.0       182.9       0.85        122.7        0.18\n",
              "21      vanity          485.0       179.7       0.90        109.4        0.16\n",
              "22         BcJ          417.0       174.1       0.86        120.7        0.17\n",
              "23       zombs          331.0       172.6       0.74        116.5        0.22\n",
              "24       hazed          207.0       168.6       0.85        110.8        0.27\n",
              "25      Frosty          314.0       144.6       0.70         98.8        0.33"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7ea63753-2acc-4424-bbb5-e547d8889fa7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Player Name</th>\n",
              "      <th>Rounds Played</th>\n",
              "      <th>Average CS</th>\n",
              "      <th>K/D Ratio</th>\n",
              "      <th>Average DPR</th>\n",
              "      <th>Headshot %</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>leaf</td>\n",
              "      <td>485.0</td>\n",
              "      <td>270.4</td>\n",
              "      <td>1.27</td>\n",
              "      <td>170.1</td>\n",
              "      <td>0.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Cryocells</td>\n",
              "      <td>417.0</td>\n",
              "      <td>249.6</td>\n",
              "      <td>1.43</td>\n",
              "      <td>152.4</td>\n",
              "      <td>0.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>yay</td>\n",
              "      <td>583.0</td>\n",
              "      <td>243.3</td>\n",
              "      <td>1.37</td>\n",
              "      <td>154.6</td>\n",
              "      <td>0.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>trent</td>\n",
              "      <td>460.0</td>\n",
              "      <td>232.0</td>\n",
              "      <td>1.33</td>\n",
              "      <td>156.4</td>\n",
              "      <td>0.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Victor</td>\n",
              "      <td>583.0</td>\n",
              "      <td>229.1</td>\n",
              "      <td>1.11</td>\n",
              "      <td>147.9</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>s0m</td>\n",
              "      <td>207.0</td>\n",
              "      <td>220.0</td>\n",
              "      <td>1.11</td>\n",
              "      <td>141.2</td>\n",
              "      <td>0.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>zekken</td>\n",
              "      <td>417.0</td>\n",
              "      <td>219.8</td>\n",
              "      <td>1.06</td>\n",
              "      <td>144.6</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Xeppaa</td>\n",
              "      <td>485.0</td>\n",
              "      <td>213.0</td>\n",
              "      <td>1.00</td>\n",
              "      <td>140.2</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>skuba</td>\n",
              "      <td>314.0</td>\n",
              "      <td>212.0</td>\n",
              "      <td>1.07</td>\n",
              "      <td>140.2</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Zellsis</td>\n",
              "      <td>333.0</td>\n",
              "      <td>210.1</td>\n",
              "      <td>1.04</td>\n",
              "      <td>133.9</td>\n",
              "      <td>0.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>SicK</td>\n",
              "      <td>331.0</td>\n",
              "      <td>203.9</td>\n",
              "      <td>1.01</td>\n",
              "      <td>136.7</td>\n",
              "      <td>0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>mitch</td>\n",
              "      <td>485.0</td>\n",
              "      <td>202.6</td>\n",
              "      <td>1.04</td>\n",
              "      <td>130.9</td>\n",
              "      <td>0.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>valyn</td>\n",
              "      <td>460.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>1.09</td>\n",
              "      <td>128.4</td>\n",
              "      <td>0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>crashies</td>\n",
              "      <td>583.0</td>\n",
              "      <td>197.5</td>\n",
              "      <td>1.05</td>\n",
              "      <td>131.6</td>\n",
              "      <td>0.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>ShahZaM</td>\n",
              "      <td>331.0</td>\n",
              "      <td>194.8</td>\n",
              "      <td>0.99</td>\n",
              "      <td>135.8</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>bdog</td>\n",
              "      <td>305.0</td>\n",
              "      <td>192.1</td>\n",
              "      <td>0.95</td>\n",
              "      <td>127.1</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>tex</td>\n",
              "      <td>207.0</td>\n",
              "      <td>191.8</td>\n",
              "      <td>0.74</td>\n",
              "      <td>124.6</td>\n",
              "      <td>0.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>TiGG</td>\n",
              "      <td>305.0</td>\n",
              "      <td>190.8</td>\n",
              "      <td>0.86</td>\n",
              "      <td>124.6</td>\n",
              "      <td>0.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>neT</td>\n",
              "      <td>460.0</td>\n",
              "      <td>189.1</td>\n",
              "      <td>0.97</td>\n",
              "      <td>123.5</td>\n",
              "      <td>0.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>dazzLe</td>\n",
              "      <td>305.0</td>\n",
              "      <td>183.3</td>\n",
              "      <td>0.79</td>\n",
              "      <td>124.0</td>\n",
              "      <td>0.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>dapr</td>\n",
              "      <td>331.0</td>\n",
              "      <td>182.9</td>\n",
              "      <td>0.85</td>\n",
              "      <td>122.7</td>\n",
              "      <td>0.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>vanity</td>\n",
              "      <td>485.0</td>\n",
              "      <td>179.7</td>\n",
              "      <td>0.90</td>\n",
              "      <td>109.4</td>\n",
              "      <td>0.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>BcJ</td>\n",
              "      <td>417.0</td>\n",
              "      <td>174.1</td>\n",
              "      <td>0.86</td>\n",
              "      <td>120.7</td>\n",
              "      <td>0.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>zombs</td>\n",
              "      <td>331.0</td>\n",
              "      <td>172.6</td>\n",
              "      <td>0.74</td>\n",
              "      <td>116.5</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>hazed</td>\n",
              "      <td>207.0</td>\n",
              "      <td>168.6</td>\n",
              "      <td>0.85</td>\n",
              "      <td>110.8</td>\n",
              "      <td>0.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Frosty</td>\n",
              "      <td>314.0</td>\n",
              "      <td>144.6</td>\n",
              "      <td>0.70</td>\n",
              "      <td>98.8</td>\n",
              "      <td>0.33</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ea63753-2acc-4424-bbb5-e547d8889fa7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7ea63753-2acc-4424-bbb5-e547d8889fa7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7ea63753-2acc-4424-bbb5-e547d8889fa7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(valorant_stats).describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "iccFNMe6B--F",
        "outputId": "b18211d5-42e4-48d9-fb8c-4b20dc4a41ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Rounds Played  Average CS  K/D Ratio  Average DPR  Headshot %\n",
              "count      26.000000   26.000000  26.000000    26.000000   26.000000\n",
              "mean      390.038462  202.603846   1.006923   132.600000    0.236923\n",
              "std       112.356746   27.597992   0.191411    16.045361    0.051285\n",
              "min       207.000000  144.600000   0.700000    98.800000    0.160000\n",
              "25%       314.000000  184.750000   0.860000   123.625000    0.210000\n",
              "50%       375.000000  198.750000   1.005000   131.250000    0.225000\n",
              "75%       478.750000  218.100000   1.085000   140.950000    0.267500\n",
              "max       583.000000  270.400000   1.430000   170.100000    0.350000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-650ca1ef-c63d-484e-bafb-3f75251ed57e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rounds Played</th>\n",
              "      <th>Average CS</th>\n",
              "      <th>K/D Ratio</th>\n",
              "      <th>Average DPR</th>\n",
              "      <th>Headshot %</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>26.000000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>26.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>390.038462</td>\n",
              "      <td>202.603846</td>\n",
              "      <td>1.006923</td>\n",
              "      <td>132.600000</td>\n",
              "      <td>0.236923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>112.356746</td>\n",
              "      <td>27.597992</td>\n",
              "      <td>0.191411</td>\n",
              "      <td>16.045361</td>\n",
              "      <td>0.051285</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>207.000000</td>\n",
              "      <td>144.600000</td>\n",
              "      <td>0.700000</td>\n",
              "      <td>98.800000</td>\n",
              "      <td>0.160000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>314.000000</td>\n",
              "      <td>184.750000</td>\n",
              "      <td>0.860000</td>\n",
              "      <td>123.625000</td>\n",
              "      <td>0.210000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>375.000000</td>\n",
              "      <td>198.750000</td>\n",
              "      <td>1.005000</td>\n",
              "      <td>131.250000</td>\n",
              "      <td>0.225000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>478.750000</td>\n",
              "      <td>218.100000</td>\n",
              "      <td>1.085000</td>\n",
              "      <td>140.950000</td>\n",
              "      <td>0.267500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>583.000000</td>\n",
              "      <td>270.400000</td>\n",
              "      <td>1.430000</td>\n",
              "      <td>170.100000</td>\n",
              "      <td>0.350000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-650ca1ef-c63d-484e-bafb-3f75251ed57e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-650ca1ef-c63d-484e-bafb-3f75251ed57e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-650ca1ef-c63d-484e-bafb-3f75251ed57e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    }
  ]
}